name: Build microservices

on:
  push:
    branches: [ staging, prod ]

jobs:
  changed-microservices:
    name: Get changed microservices & set tags
    runs-on: ubuntu-18.04
    outputs:
      microservices: ${{ steps.microservices.outputs.list }}
      microservices-spaced: ${{ steps.microservices.outputs.list-spaced }}
      branch: ${{ steps.other-params.outputs.branch }}
      docker-tag: ${{ steps.other-params.outputs.docker-tag }}

    steps:
      - uses: actions/checkout@v2

      - run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      - id: files
        uses: Ana06/get-changed-files@v2.1.0
        with:
          format: 'json'

      - id: microservices
        run: ./.github/get-changed-microservices.sh
        env:
          FILES: '${{ steps.files.outputs.all }}'

      - name: Branch name & docker tag
        id: other-params
        shell: bash
        run: |
          branch=$(echo ${GITHUB_REF#refs/heads/})
          echo "::set-output name=branch::$branch"
          # define docker tag
          if [ "$branch" == "staging" ]; then
            echo "::set-output name=docker-tag::-$branch"
          else
            echo "::set-output name=docker-tag::"
          fi

  checks-compile:
    name: Code checks & compile & npm publish
    needs: changed-microservices
    runs-on: ubuntu-18.04
    if: needs.changed-microservices.outputs.microservices-spaced != ''

    env:
      ONLY: ${{ needs.changed-microservices.outputs.microservices-spaced }}

    steps:
      - uses: actions/checkout@v2

      - run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      - name: Install global dependencies
        run: npm ci

      - name: Install microservices dependencies
        run: npm run global-install

      - name: Check microservice eslint
        run: npm run lint:check

      - name: Check microservice typescript
        run: npm run ts:check

      - name: Run microservices tests with coverage
        run: npm run test yes

      - name: Compile microservices
        run: npm run build

      # note: this also update package.json version
      - name: Publish npm packages / create github release
        run: npm run semantic-release
        env:
          GIT_BRANCH: ${{ needs.changed-microservices.outputs.branch }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Archive microservices artifacts
        uses: actions/upload-artifact@v2
        with:
          name: microservice-artifacts
          path: |
            microservices/*/lib/*
            # keep update version
            microservices/*/package.json

      - name: Archive code coverage artifacts
        uses: actions/upload-artifact@v2
        # only for staging
        if: ${{ needs.changed-microservices.outputs.branch }} == "staging"
        with:
          name: coverage-artifacts
          path: |
            microservices/*/coverage/*

  build-docker:
    name: Build docker images
    needs: [changed-microservices, checks-compile]
    runs-on: ubuntu-18.04
    if: needs.changed-microservices.outputs.microservices != ''

    strategy:
      matrix:
        microservice: ${{ fromJson(needs.changed-microservices.outputs.microservices) }}

    env:
      MICROSERVICE_NAME: ${{ matrix.microservice }}
      WORK_DIR: "microservices/${{ matrix.microservice }}"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      - uses: actions/download-artifact@master
        with:
          name: microservice-artifacts
          path: microservices

      - name: Get npm package version
        id: package-version
        uses: Saionaro/extract-package-version@v1.1.1
        with:
          path: ${{ env.WORK_DIR }}

      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: "Lomray-Software/microservices/${{ env.MICROSERVICE_NAME }}"
          tags: "latest${{ needs.changed-microservices.outputs.docker-tag }},${{ steps.package-version.outputs.version}}"
          dockerfile: Dockerfile-nodejs
          context: ${{ env.WORK_DIR }}
          buildoptions: "--compress --force-rm --no-cache"
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

  sonarcube:
    name: Sonarcube
    needs: [changed-microservices, checks-compile]
    runs-on: ubuntu-18.04
    # only for staging
    if: ${{ (needs.changed-microservices.outputs.microservices != '') && (needs.changed-microservices.outputs.branch == 'staging') }}

    strategy:
      matrix:
        microservice: ${{ fromJson(needs.changed-microservices.outputs.microservices) }}

    env:
      MICROSERVICE_NAME: ${{ matrix.microservice }}
      WORK_DIR: "microservices/${{ matrix.microservice }}"

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@master
        with:
          name: coverage-artifacts
          path: microservices

      - name: Get npm package version
        id: package-version
        uses: Saionaro/extract-package-version@v1.1.1
        with:
          path: ${{ env.WORK_DIR }}

      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          projectBaseDir: ${{ env.WORK_DIR }}
          args: >
            -Dsonar.projectVersion=${{ steps.package-version.outputs.version }}
