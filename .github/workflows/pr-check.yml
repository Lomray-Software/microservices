name: Check PR

on:
  pull_request:
    branches: [ prod, staging ]

jobs:
  changed-microservices:
    name: Get changed microservices
    runs-on: ubuntu-latest
    outputs:
      microservices: ${{ steps.microservices.outputs.list }}

    steps:
      - uses: actions/checkout@v3

      - run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          json: true
          dir_names: true
          dir_names_max_depth: 3

      - id: microservices
        run: npx @lomray/microservices-cli changed-microservices
        env:
          FILES: '${{ steps.changed-files.outputs.all_changed_files }}'

  checks:
    name: Run code checks
    needs: changed-microservices
    runs-on: ubuntu-latest
    if: needs.changed-microservices.outputs.microservices != ''

    strategy:
      matrix:
        microservice: ${{ fromJson(needs.changed-microservices.outputs.microservices) }}

    env:
      MICROSERVICE_NAME: ${{ matrix.microservice }}

    steps:
      - uses: actions/checkout@v3

      - run: echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      - name: Install global dependencies
        run: npm ci

      - name: Install microservice dependencies
        run: npx @lomray/microservices-cli global-install
        env:
          ONLY: ${{ env.MICROSERVICE_NAME }}

      - name: Check microservice eslint
        run: npx @lomray/microservices-cli lint
        env:
          ONLY: ${{ env.MICROSERVICE_NAME }}

      - name: Check microservice typescript
        run: npx @lomray/microservices-cli ts-check
        env:
          ONLY: ${{ env.MICROSERVICE_NAME }}

      - name: Run microservices tests
        run: npx @lomray/microservices-cli test
        env:
          ONLY: ${{ env.MICROSERVICE_NAME }}
