[
  {
    "microservice": "authorization",
    "method": "role.create",
    "description": "Create a new Role",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.CreateRequestParams.a9291794d1b2b24e6a5a6a651eb3b574",
    "modelOut": "authorization.CreateOutputParams.99e3f9e2275885dc1b3f797dbee8611c",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "model.view",
    "description": "Returns Model by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "ViewRequestParams",
    "modelOut": "authorization.ViewOutputParams.4c90aafb8eac6497496f4eaa1acaedeb",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "model.create",
    "description": "Create a new Model",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.CreateRequestParams.751da20dd166d3b96cdc346f02bd2600",
    "modelOut": "authorization.CreateOutputParams.4c90aafb8eac6497496f4eaa1acaedeb",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "model.update",
    "description": "Update Model by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.UpdateRequestParams.751da20dd166d3b96cdc346f02bd2600",
    "modelOut": "authorization.UpdateOutputParams.4c90aafb8eac6497496f4eaa1acaedeb",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "endpoint.update",
    "description": "Update Method by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.UpdateRequestParams.9b986fedb2f30f964dd5a82cf55865cc",
    "modelOut": "authorization.UpdateOutputParams.26c4cac3dc0bf70b09c1d4d15b3c823d",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "role.count",
    "description": "Returns count of Role by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "CountRequestParams",
    "modelOut": "CountOutputParams",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "filter.update",
    "description": "Update Filter by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.UpdateRequestParams.c7e9a6fb17d83a14a138233c2cd42aa8",
    "modelOut": "authorization.UpdateOutputParams.133a88c0f119356ec406846cb0ff0304",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "filter.view",
    "description": "Returns Filter by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "ViewRequestParams",
    "modelOut": "authorization.ViewOutputParams.133a88c0f119356ec406846cb0ff0304",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "filter.remove",
    "description": "Remove Filter by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "RemoveRequestParams",
    "modelOut": "authorization.RemoveOutputParams.8c32d59bf148e47301daab5a7e03cc10",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "role.list",
    "description": "Returns list of Role by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "ListRequestParams",
    "modelOut": "authorization.ListOutputParams.221f92aac51d54ab06b6eb48e3a378e5",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "user-role.assign",
    "description": "Create a new UserRole",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.CreateRequestParams.9b26d9bde22a6308c7f0315211e96c8a",
    "modelOut": "authorization.CreateOutputParams.e7351e98083b2dd2b03fb481fccf3bb7",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "endpoint-filter.remove",
    "description": "Remove MethodFilter by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "RemoveRequestParams",
    "modelOut": "authorization.RemoveOutputParams.ec2339219bd90c116a5241d184aed930",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "endpoint.remove",
    "description": "Remove Method by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "RemoveRequestParams",
    "modelOut": "authorization.RemoveOutputParams.e11ad58ada2e5ade6d6cde8b8c418d70",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "role.update",
    "description": "Update Role by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.UpdateRequestParams.a9291794d1b2b24e6a5a6a651eb3b574",
    "modelOut": "authorization.UpdateOutputParams.99e3f9e2275885dc1b3f797dbee8611c",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "role.view",
    "description": "Returns Role by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "ViewRequestParams",
    "modelOut": "authorization.ViewOutputParams.99e3f9e2275885dc1b3f797dbee8611c",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "service.sync-metadata",
    "description": "Import microservices methods and entities (create/update info about methods & models).",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.SyncMetadataInput",
    "modelOut": "authorization.SyncMetadataOutput",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "endpoint.view",
    "description": "Returns Method by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "ViewRequestParams",
    "modelOut": "authorization.ViewOutputParams.26c4cac3dc0bf70b09c1d4d15b3c823d",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "filter.create",
    "description": "Create a new Filter",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.CreateRequestParams.c7e9a6fb17d83a14a138233c2cd42aa8",
    "modelOut": "authorization.CreateOutputParams.133a88c0f119356ec406846cb0ff0304",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "model.list",
    "description": "Returns list of Model by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "ListRequestParams",
    "modelOut": "authorization.ListOutputParams.0f4c58a545987958ebc368870e07e92f",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "endpoint.create",
    "description": "Create a new Method",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.CreateRequestParams.9b986fedb2f30f964dd5a82cf55865cc",
    "modelOut": "authorization.CreateOutputParams.26c4cac3dc0bf70b09c1d4d15b3c823d",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "user-role.remove",
    "description": "Remove UserRole by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "RemoveRequestParams",
    "modelOut": "authorization.RemoveOutputParams.5d51ac5edbc9f23e5d229f6cdf344f64",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "model.remove",
    "description": "Remove Model by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "RemoveRequestParams",
    "modelOut": "authorization.RemoveOutputParams.6abe43b62d4fcf6635bb3781737b92d7",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "filter.list",
    "description": "Returns list of Filter by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "ListRequestParams",
    "modelOut": "authorization.ListOutputParams.ea84a9e6263f16d84304c8e45178ba88",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "endpoint.enforce",
    "description": "Check access user to microservice method, filter req params, get entities filters",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.EndpointEnforceInput",
    "modelOut": "authorization.EndpointEnforceOutput",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "endpoint.filter",
    "description": "Filter input/output endpoint params",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.EndpointFilterInput",
    "modelOut": "authorization.EndpointFilterOutput",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "endpoint-filter.list",
    "description": "Returns list of MethodFilter by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "ListRequestParams",
    "modelOut": "authorization.ListOutputParams.af0ed6002c2836201582d712828785a5",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "filter.count",
    "description": "Returns count of Filter by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "CountRequestParams",
    "modelOut": "CountOutputParams",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "endpoint-filter.count",
    "description": "Returns count of MethodFilter by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "CountRequestParams",
    "modelOut": "CountOutputParams",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "config-reset",
    "description": "Reset RemoteConfig cache",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelOut": "RemoteConfigOutput",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "middleware-register",
    "description": "Register remote middleware on this microservice",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "ClientRegisterMiddlewareInput",
    "modelOut": "ClientRegisterMiddlewareOutput",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "endpoint.list",
    "description": "Returns list of Method by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "ListRequestParams",
    "modelOut": "authorization.ListOutputParams.6ea6e9c2850a57a92ca1d26481a80991",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "meta",
    "description": "Get microservice metadata",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelOut": "MicroserviceMetaOutput",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "model.count",
    "description": "Returns count of Model by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "CountRequestParams",
    "modelOut": "CountOutputParams",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "endpoint-filter.create",
    "description": "Create a new MethodFilter",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.CreateRequestParams.2f2103c4e91caa301618ee63d650187b",
    "modelOut": "authorization.CreateOutputParams.4dd7f64baa954edcd368ba98ac93cd20",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "user-role.my",
    "description": "Get roles for current user",
    "allowGroup": [
      "admin",
      "user"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelOut": "authorization.UserRoleMyOutput",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "role.remove",
    "description": "Remove Role by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "RemoveRequestParams",
    "modelOut": "authorization.RemoveOutputParams.495eb94498381173c7ead0b1cd4c7052",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "endpoint-filter.update",
    "description": "Update MethodFilter by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.UpdateRequestParams.2f2103c4e91caa301618ee63d650187b",
    "modelOut": "authorization.UpdateOutputParams.4dd7f64baa954edcd368ba98ac93cd20",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "endpoint-filter.view",
    "description": "Returns MethodFilter by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "ViewRequestParams",
    "modelOut": "authorization.ViewOutputParams.4dd7f64baa954edcd368ba98ac93cd20",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "endpoint.count",
    "description": "Returns count of Method by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-04-14T05:34:30.652Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "CountRequestParams",
    "modelOut": "CountOutputParams",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "condition.remove",
    "description": "Remove Condition by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-05-18T09:51:18.471Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "RemoveRequestParams",
    "modelOut": "authorization.RemoveOutputParams.54e0493880102f21c60e943aec4d74a1",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "condition.count",
    "description": "Returns count of Condition by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-05-18T09:51:18.471Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "CountRequestParams",
    "modelOut": "CountOutputParams",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "condition.create",
    "description": "Create a new Condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-05-18T09:51:18.471Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.CreateRequestParams.e1a4ab749d1f0fd372b1d29416114e8c",
    "modelOut": "authorization.CreateOutputParams.96a82e30e6199c4f358241f4c8a01283",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "condition.list",
    "description": "Returns list of Condition by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-05-18T09:51:18.471Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "ListRequestParams",
    "modelOut": "authorization.ListOutputParams.c60ea1a87ac6a6a8a467b977ed919b2b",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "condition.view",
    "description": "Returns Condition by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-05-18T09:51:18.471Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "ViewRequestParams",
    "modelOut": "authorization.ViewOutputParams.96a82e30e6199c4f358241f4c8a01283",
    "methodFilters": []
  },
  {
    "microservice": "authorization",
    "method": "condition.update",
    "description": "Update Condition by given condition",
    "allowGroup": [
      "admin"
    ],
    "denyGroup": [],
    "createdAt": "2022-05-18T09:51:18.471Z",
    "updatedAt": "2022-05-18T10:19:06.263Z",
    "modelIn": "authorization.UpdateRequestParams.e1a4ab749d1f0fd372b1d29416114e8c",
    "modelOut": "authorization.UpdateOutputParams.96a82e30e6199c4f358241f4c8a01283",
    "methodFilters": []
  }
]