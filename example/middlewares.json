[
  {
    "target": "gateway",
    "targetMethod": "*",
    "sender": "authentication",
    "senderMethod": "token.identify",
    "type": "request",
    "order": 1,
    "params": {
      "type": "request",
      "isRequired": true,
      "exclude": ["users.user.sign-in", "users.identity-provider.sign-in"],
      "strategy": "transform",
      "convertResult": {
        "payload.authentication.userId": "$middleware.userId",
        "payload.authentication.isAuth": "$middleware.isAuth",
        "payload.authentication.provider": "$middleware.provider"
      }
    }
  },
  {
    "target": "gateway",
    "targetMethod": "*",
    "sender": "authorization",
    "senderMethod": "endpoint.enforce",
    "type": "request",
    "order": 2,
    "params": {
      "type": "request",
      "isRequired": true,
      "isCleanResult": true,
      "strategy": "transform",
      "reqParams": {
        "isInternal": true
      },
      "convertParams": {
        "userId": "$task.params.payload.authentication.userId",
        "method": "$task.method",
        "filterInput": "$task.params"
      },
      "convertResult": {
        ".": "$middleware.filteredInput",
        "payload": "$task.params.payload",
        "payload.authorization.isAllow": "$middleware.isAllow",
        "payload.authorization.roles": "$middleware.roles",
        "payload.authorization.filter": "$middleware.filters"
      }
    }
  },
  {
    "target": "gateway",
    "targetMethod": "*",
    "sender": "authorization",
    "senderMethod": "endpoint.filter",
    "type": "response",
    "params": {
      "type": "response",
      "isRequired": true,
      "isCleanResult": true,
      "strategy": "transform",
      "reqParams": {
        "isInternal": true
      },
      "convertParams": {
        "type": "out",
        "userId": "$task.params.payload.authentication.userId",
        "method": "$task.method",
        "filterInput": "$result"
      },
      "convertResult": {
        ".": "$middleware.filtered"
      }
    }
  },
  {
    "target": "users",
    "targetMethod": "identity-provider.sign-in",
    "sender": "authentication",
    "senderMethod": "token.create",
    "type": "response",
    "params": {
      "type": "response",
      "isRequired": true,
      "strategy": "transform",
      "convertParams": {
        "type": "jwt",
        "userId": "$result.user.id",
        "returnType": "cookies"
      },
      "convertResult": {
        "payload.cookies": "$middleware.payload.cookies",
        "tokens.refresh": "$middleware.refresh"
      }
    }
  },
  {
    "target": "users",
    "targetMethod": "user.sign-in",
    "sender": "authentication",
    "senderMethod": "token.create",
    "type": "response",
    "params": {
      "type": "response",
      "isRequired": true,
      "strategy": "transform",
      "convertParams": {
        "type": "jwt",
        "userId": "$result.user.id",
        "returnType": "cookies"
      },
      "convertResult": {
        "payload.cookies": "$middleware.payload.cookies",
        "tokens.refresh": "$middleware.refresh"
      }
    }
  },
  {
    "target": "users",
    "targetMethod": "user.sign-up",
    "sender": "authentication",
    "senderMethod": "token.create",
    "type": "response",
    "params": {
      "type": "response",
      "isRequired": true,
      "strategy": "transform",
      "convertParams": {
        "type": "jwt",
        "userId": "$result.user.id",
        "returnType": "cookies"
      },
      "convertResult": {
        "payload.cookies": "$middleware.payload.cookies",
        "tokens.refresh": "$middleware.refresh"
      }
    }
  },
  {
    "target": "users",
    "targetMethod": "user.sign-out",
    "sender": "authentication",
    "senderMethod": "token.remove",
    "type": "response",
    "params": {
      "type": "response",
      "isRequired": true,
      "strategy": "transform",
      "convertParams": {
        "query.where.userId": "$task.params.userId"
      },
      "convertResult": {
        "payload.cookies.0.action": "remove",
        "payload.cookies.0.name": "jwt-access"
      }
    }
  }
]
