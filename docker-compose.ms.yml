version: '3.7'

services:
  configuration:
    image: ghcr.io/lomray-software/microservices/configuration:latest-staging
    container_name: configuration
    environment:
      DB_HOST: db
      # from ./config.json (use this tool https://codebeautify.org/jsonviewer to convert json to string)
      MS_INIT_CONFIGS: '[{"microservice":"*","type":"db","params":{"host":"db","port":5432,"username":"postgres","password":"example"}},{"microservice":"authentication","type":"config","params":{"jwtOptions":{"secretKey":"DemoSecretKey"}}},{"microservice":"notification","type":"emailTransportOptions","params":{"defaultEmailFrom":"change@me.com","transportOptions":{"host":"smtp.ethereal.email","port":587,"secure":false,"auth":{"user":"generated ethereal user","pass":"generated ethereal password"}}}}]'
      # from ./middlewares.json (use this tool https://jsonformatter.org/json-escape to escape quotes)
      MS_INIT_MIDDLEWARES: "[{\"target\":\"gateway\",\"targetMethod\":\"*\",\"sender\":\"authentication\",\"senderMethod\":\"token.identify\",\"type\":\"request\",\"order\":10,\"description\":\"Validate JWT token and add payload with token info.\",\"params\":{\"type\":\"request\",\"isRequired\":true,\"maxValueSize\":100,\"exclude\":[\"users.user.sign-in\",\"users.identity-provider.sign-in\",\"authentication.cookies.remove\",\"authentication.token.renew\"],\"strategy\":\"transform\",\"convertResult\":{\"payload.authentication.tokenId\":\"$middleware.tokenId\",\"payload.authentication.userId\":\"$middleware.userId\",\"payload.authentication.isAuth\":\"$middleware.isAuth\",\"payload.authentication.provider\":\"$middleware.provider\"}}},{\"target\":\"gateway\",\"targetMethod\":\"*\",\"sender\":\"authorization\",\"senderMethod\":\"endpoint.enforce\",\"type\":\"request\",\"order\":20,\"description\":\"Whether the user is allowed to call the method. Filter method input params.\",\"params\":{\"type\":\"request\",\"isRequired\":true,\"isCleanResult\":true,\"strategy\":\"transform\",\"reqParams\":{\"isInternal\":true},\"convertParams\":{\"userId\":\"$task.params.payload.authentication.userId\",\"method\":\"$task.method\",\"filterInput\":\"$task.params\"},\"convertResult\":{\".\":\"$middleware.filteredInput\",\"payload\":\"$task.params.payload\",\"payload.authorization.isAllow\":\"$middleware.isAllow\",\"payload.authorization.roles\":\"$middleware.roles\",\"payload.authorization.filter\":\"$middleware.filters\"}}},{\"target\":\"gateway\",\"targetMethod\":\"*\",\"sender\":\"authorization\",\"senderMethod\":\"endpoint.filter\",\"type\":\"response\",\"order\":20,\"description\":\"Filter microservice response fields.\",\"params\":{\"type\":\"response\",\"isRequired\":true,\"isCleanResult\":true,\"strategy\":\"transform\",\"reqParams\":{\"isInternal\":true},\"convertParams\":{\"type\":\"out\",\"userId\":\"$task.params.payload.authentication.userId\",\"method\":\"$task.method\",\"filterInput\":\"$result\"},\"convertResult\":{\".\":\"$middleware.filtered\"}}},{\"target\":\"users\",\"targetMethod\":\"identity-provider.sign-in\",\"sender\":\"authentication\",\"senderMethod\":\"token.create\",\"type\":\"response\",\"order\":10,\"description\":\"Create JWT auth tokens and attach to response after successful sign in.\",\"params\":{\"type\":\"response\",\"isRequired\":true,\"strategy\":\"transform\",\"extraRequests\":[{\"key\":\"rolesResp\",\"method\":\"authorization.user-role.view\",\"params\":{\"userId\":\"<%= result.user.id %>\"}}],\"convertParams\":{\"type\":\"jwt\",\"userId\":\"$result.user.id\",\"params\":\"$task.params.payload.headers.user-info\",\"jwtPayload.roles\":\"$rolesResp.roles\",\"returnType\":\"<%= _.get(task, 'params.payload.headers.user-info.authType', 'cookies') %>\"},\"convertResult\":{\"payload.cookies\":\"$middleware.payload.cookies\",\"tokens.access\":\"$middleware.access\",\"tokens.refresh\":\"$middleware.refresh\"}}},{\"target\":\"users\",\"targetMethod\":\"user.sign-in\",\"sender\":\"authentication\",\"senderMethod\":\"token.create\",\"type\":\"response\",\"order\":10,\"description\":\"Create JWT auth tokens and attach to response after successful sign in.\",\"params\":{\"type\":\"response\",\"isRequired\":true,\"strategy\":\"transform\",\"extraRequests\":[{\"key\":\"rolesResp\",\"method\":\"authorization.user-role.view\",\"params\":{\"userId\":\"<%= result.user.id %>\"}}],\"convertParams\":{\"type\":\"jwt\",\"userId\":\"$result.user.id\",\"params\":\"$task.params.payload.headers.user-info\",\"jwtPayload.roles\":\"$rolesResp.roles\",\"returnType\":\"<%= _.get(task, 'params.payload.headers.user-info.authType', 'cookies') %>\"},\"convertResult\":{\"payload.cookies\":\"$middleware.payload.cookies\",\"tokens.access\":\"$middleware.access\",\"tokens.refresh\":\"$middleware.refresh\"}}},{\"target\":\"users\",\"targetMethod\":\"user.sign-up\",\"sender\":\"authentication\",\"senderMethod\":\"token.create\",\"type\":\"response\",\"order\":10,\"description\":\"Create JWT auth tokens and attach to response after successful sign up.\",\"params\":{\"type\":\"response\",\"isRequired\":true,\"strategy\":\"transform\",\"extraRequests\":[{\"key\":\"rolesResp\",\"method\":\"authorization.user-role.view\",\"params\":{\"userId\":\"<%= result.user.id %>\"}}],\"convertParams\":{\"type\":\"jwt\",\"userId\":\"$result.user.id\",\"params\":\"$task.params.payload.headers.user-info\",\"jwtPayload.roles\":\"$rolesResp.roles\",\"returnType\":\"<%= _.get(task, 'params.payload.headers.user-info.authType', 'cookies') %>\"},\"convertResult\":{\"payload.cookies\":\"$middleware.payload.cookies\",\"tokens.access\":\"$middleware.access\",\"tokens.refresh\":\"$middleware.refresh\"}}},{\"target\":\"users\",\"targetMethod\":\"user.sign-out\",\"sender\":\"authentication\",\"senderMethod\":\"token.remove\",\"type\":\"response\",\"order\":10,\"description\":\"Remove JWT auth tokens after successful sign out.\",\"params\":{\"type\":\"response\",\"isRequired\":true,\"strategy\":\"transform\",\"convertParams\":{\"query.where.id\":\"$task.params.payload.authentication.tokenId\"},\"convertResult\":{\"payload.cookies.0.action\":\"remove\",\"payload.cookies.0.name\":\"jwt-access\"}}}]"

  gateway:
    image: ghcr.io/lomray-software/microservices/gateway:latest-staging
    container_name: gateway
    ports:
      - "3000:3000"
    depends_on:
      - configuration

  authentication:
    image: ghcr.io/lomray-software/microservices/authentication:latest-staging
    container_name: authentication
    depends_on:
      - configuration

  authorization:
    image: ghcr.io/lomray-software/microservices/authorization:latest-staging
    container_name: authorization
    environment:
      MS_DEFAULT_PERMISSION_MIGRATION: 1
    depends_on:
      - configuration

  notification:
    image: ghcr.io/lomray-software/microservices/notification:latest-staging
    container_name: notification
    depends_on:
      - configuration

  users:
    image: ghcr.io/lomray-software/microservices/users:latest-staging
    container_name: users
    depends_on:
      - configuration
